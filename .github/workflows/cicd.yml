name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run unit tests
      run: |
        # Run unit tests here
        # For example:
        # docker-compose -f docker-compose.ci.yml run --rm app python manage.py test

    # Commented out for the time being due to
    - name: Run static security analysis
      run: |
        docker pull ghcr.io/pycqa/bandit/bandit
        docker run ghcr.io/pycqa/bandit/bandit -r src

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download the VBA binary
      env:
        AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      run: az storage blob download -f src/vbaProject.bin -c vba -n vbaProject.bin

    - name: Build Docker image
      run: docker build . -t ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_REPOSITORY }}:${{ github.sha }}

    - name: Push Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: .

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-22.04
    needs: ci

    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Load Docker image
      run: docker load -i docker-image

    - name: Push Docker image to Azure Container Registry
      run: docker push ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_REPOSITORY }}:${{ github.sha }}
